{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAY,SAAS,aAAa,CAAC,cACnC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAe,SAAS,aAAa,CAAC,kBAEtC,EAAQ,AADA,SAAS,aAAa,CAAC,UACjB,OAAO,CAAC,EAAE,CAE9B,EAAU,gBAAgB,CAAC,QAAS,SAAC,CAArC,EACE,IAAM,EAAU,SAAS,aAAa,CAAC,MAAM,SAAS,CAAC,CAAA,EAEnD,CAAA,EAAM,QAAQ,CAAC,MAAM,CAAG,IAC1B,EAAM,MAAM,CAAC,EAEjB,GAEA,EAAU,gBAAgB,CAAC,QAAS,SAAC,CAArC,EACE,SAAS,aAAa,CAAC,MAAM,MAAM,EACrC,GAEA,EAAa,gBAAgB,CAAC,QAAS,SAAC,CAAxC,EAES,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,EADP,GAAK,EAAG,EAAM,QAAQ,EAAE,KAAK,CAAC,SAAC,CAA/B,EAA2C,OAAA,EAAQ,QAAQ,CAAC,MAAM,CAAG,E,G,G,CACnE,IAAA,IAAK,EAAA,EAAgB,EAAG,EAAM,QAAQ,CAAA,CAAA,OAAA,QAAA,CAAA,GAAjC,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAoC,CAApC,IAAM,EAAN,EAAA,KAAA,CACG,EAAU,SAAS,aAAa,CAAC,MAAM,SAAS,CAAC,CAAA,GAEvD,EAAM,MAAM,CAAC,EACf,C,C,M,E,CAJK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAMT,GAEA,EAAa,gBAAgB,CAAC,QAAS,SAAC,CAAxC,EACO,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAgB,EAAG,EAAM,QAAQ,CAAA,CAAA,OAAA,QAAA,CAAA,GAAjC,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACG,gBAAgB,CAAC,MAAM,E,C,M,E,CAD1B,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAGP,GAEA,EAAU,gBAAgB,CAAC,QAAS,SAAC,CAArC,EAUM,AAA0B,KAA1B,EAAM,QAAQ,CAAC,MAAM,CACvB,AAVgB,EAUT,YAAY,CAAC,WAAY,IAEhC,AAZgB,EAYT,eAAe,CAAC,YAKrB,AAA0B,IAA1B,EAAM,QAAQ,CAAC,MAAM,CACvB,AAjBgB,EAiBT,YAAY,CAAC,WAAY,IAEhC,AAnBgB,EAmBT,eAAe,CAAC,YAKpB,EAAG,EAAM,QAAQ,EAAE,KAAK,CAAC,SAAC,CAA/B,EAA2C,OAAA,AAA4B,KAA5B,EAAQ,QAAQ,CAAC,MAAM,AAChE,GAAA,AAxBkB,EAwBX,YAAY,CAAC,WAAY,IAEhC,AA1BkB,EA0BX,eAAe,CAAC,YAKpB,EAAG,EAAM,QAAQ,EAAE,KAAK,CAAC,SAAC,CAA/B,EAA2C,OAAA,AAA4B,IAA5B,EAAQ,QAAQ,CAAC,MAAM,AAChE,GAAA,AA/BkB,EA+BX,YAAY,CAAC,WAAY,IAEhC,AAjCkB,EAiCX,eAAe,CAAC,WAhC3B","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar container = document.querySelector(\".container\");\nvar appendRow = document.querySelector(\".append-row\");\nvar removeRow = document.querySelector(\".remove-row\");\nvar appendColumn = document.querySelector(\".append-column\");\nvar removeColumn = document.querySelector(\".remove-column\");\nvar field = document.querySelector(\".field\");\nvar tbody = field.tBodies[0];\nappendRow.addEventListener(\"click\", function(_event) {\n    var trClone = document.querySelector(\"tr\").cloneNode(true);\n    if (tbody.children.length < 10) tbody.append(trClone);\n});\nremoveRow.addEventListener(\"click\", function(_event) {\n    document.querySelector(\"tr\").remove();\n});\nappendColumn.addEventListener(\"click\", function(_event) {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    if (_to_consumable_array(tbody.children).every(function(element) {\n        return element.children.length < 10;\n    })) try {\n        for(var _iterator = _to_consumable_array(tbody.children)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var child = _step.value;\n            var tdClone = document.querySelector(\"td\").cloneNode(true);\n            child.append(tdClone);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n});\nremoveColumn.addEventListener(\"click\", function(_event) {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = _to_consumable_array(tbody.children)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var child = _step.value;\n            child.lastElementChild.remove();\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n});\ncontainer.addEventListener(\"click\", function(_event) {\n    checkMaxRowsCount(appendRow);\n    checkMinRowsCount(removeRow);\n    checkMaxColumnCount(appendColumn);\n    checkMinColumnCount(removeColumn);\n});\n// #region checkFunctions\nfunction checkMaxRowsCount(append) {\n    if (tbody.children.length === 10) append.setAttribute(\"disabled\", \"\");\n    else append.removeAttribute(\"disabled\");\n}\nfunction checkMinRowsCount(remove) {\n    if (tbody.children.length === 2) remove.setAttribute(\"disabled\", \"\");\n    else remove.removeAttribute(\"disabled\");\n}\nfunction checkMaxColumnCount(append) {\n    if (_to_consumable_array(tbody.children).every(function(element) {\n        return element.children.length === 10;\n    })) append.setAttribute(\"disabled\", \"\");\n    else append.removeAttribute(\"disabled\");\n}\nfunction checkMinColumnCount(remove) {\n    if (_to_consumable_array(tbody.children).every(function(element) {\n        return element.children.length === 2;\n    })) remove.setAttribute(\"disabled\", \"\");\n    else remove.removeAttribute(\"disabled\");\n} // #endregion\n\n//# sourceMappingURL=index.9f90f6f1.js.map\n","'use strict';\n\nconst container = document.querySelector('.container');\nconst appendRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst appendColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\nconst field = document.querySelector('.field');\nconst tbody = field.tBodies[0];\n\nappendRow.addEventListener('click', (_event) => {\n  const trClone = document.querySelector('tr').cloneNode(true);\n\n  if (tbody.children.length < 10) {\n    tbody.append(trClone);\n  }\n});\n\nremoveRow.addEventListener('click', (_event) => {\n  document.querySelector('tr').remove();\n});\n\nappendColumn.addEventListener('click', (_event) => {\n  if ([...tbody.children].every((element) => element.children.length < 10)) {\n    for (const child of [...tbody.children]) {\n      const tdClone = document.querySelector('td').cloneNode(true);\n\n      child.append(tdClone);\n    }\n  }\n});\n\nremoveColumn.addEventListener('click', (_event) => {\n  for (const child of [...tbody.children]) {\n    child.lastElementChild.remove();\n  }\n});\n\ncontainer.addEventListener('click', (_event) => {\n  checkMaxRowsCount(appendRow);\n  checkMinRowsCount(removeRow);\n  checkMaxColumnCount(appendColumn);\n  checkMinColumnCount(removeColumn);\n});\n\n// #region checkFunctions\n\nfunction checkMaxRowsCount(append) {\n  if (tbody.children.length === 10) {\n    append.setAttribute('disabled', '');\n  } else {\n    append.removeAttribute('disabled');\n  }\n}\n\nfunction checkMinRowsCount(remove) {\n  if (tbody.children.length === 2) {\n    remove.setAttribute('disabled', '');\n  } else {\n    remove.removeAttribute('disabled');\n  }\n}\n\nfunction checkMaxColumnCount(append) {\n  if ([...tbody.children].every((element) => element.children.length === 10)) {\n    append.setAttribute('disabled', '');\n  } else {\n    append.removeAttribute('disabled');\n  }\n}\n\nfunction checkMinColumnCount(remove) {\n  if ([...tbody.children].every((element) => element.children.length === 2)) {\n    remove.setAttribute('disabled', '');\n  } else {\n    remove.removeAttribute('disabled');\n  }\n}\n\n// #endregion\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","container","document","querySelector","appendRow","removeRow","appendColumn","removeColumn","tbody","field","tBodies","addEventListener","_event","trClone","cloneNode","children","append","remove","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","every","element","_step","_iterator","next","done","child","value","tdClone","err","return","lastElementChild","setAttribute","removeAttribute"],"version":3,"file":"index.9f90f6f1.js.map"}